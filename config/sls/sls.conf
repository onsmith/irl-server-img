##
# Configuration file for srt-live-server
#
# Documentation:
#   https://github.com/Edward-Wu/srt-live-server/wiki/Directives
#   https://gitlab.com/mattwb65/srt-live-server#note
#
# Examples:
#   https://github.com/Edward-Wu/srt-live-server/blob/master/sls.conf
#   https://gitlab.com/mattwb65/srt-live-server/-/blob/master/sls.conf
#   https://github.com/Gussy/srtla-relay/blob/main/sls.conf
#

srt {
  # Number of worker threads to spawn for sls
  # It is recommended to match the number of threads to the number of available cpu cores
  worker_threads 1;

  # the max client connection for each worker thread, please set this value according the cpu ability
  worker_connections 300;

  # HTTP port that serves stream stats, to be queried by NOALBS
  # e.g. http://127.0.0.1:8080/stats
  http_port 8080;
  cors_header *;

  # Logging configuration
  log_file /dev/stdout;
  log_level warning; # trace, debug, info, warning, error, fatal

  # statistic info url, sls will post the statistic info with it. example: http://192.168.31.106:8001/sls/stat;
  # stat_post_url http://192.168.31.106:8001/sls/stat;

  # How often stream stats are posted, in seconds
  # stat_post_interval 5; # seconds

  # The path on the server where the HLS .ts video files should be stored, if
  # hls is enabled (see the record_hls setting in the app section below).
  # record_hls_path_prefix /tmp/mov/sls;
  # vod file name: /tmp/mov/sls/$listen/$domain_publisher/$app_publisher/$stream_name/vod.m3u8

  server {
    # The upstream publisher should push the stream to this port
    # Downstream consumers pull the stream from this port
    listen 49002;

    # Network latency in milliseconds
    # This value trades off between stream delay and stream quality
    # In unstable conditions, consider increasing to 5000 (5 seconds)
    latency 20; # ms

    # The first component of the stream id, identifying the stream publisher
    # Example: srt://SLS_IP_ADDRESS:49002?streamid=publisher/stream/INGEST_KEY
    domain_publisher publisher;

    # A space-separated list of strings, identifying the stream subscribers
    # Example: srt://SLS_IP_ADDRESS:49002?streamid=subscriber/stream/INGEST_KEY
    domain_player subscriber;

    # Defines the default stream id, if none is provided by the party initiating
    # the connection. Must be a string with the following format:
    #   domain_publisher/app_publisher/user_defined_key
    # default_sid subscriber/stream/INGEST_KEY;

    # accept connections at the same time
    backlog 100;

    # The timeout of no data, when timeout the server will discard the client
    idle_streams_timeout 10; # s, -1 means unlimited

    # on_event_url http://192.168.31.106:8000/sls/on_event; #?method=on_connect|on_close&role_name=&srt_url=%s

    app {
      # The second component of the stream id, identifying the stream producer.
      # Note that the values for app_publisher and app_player can be the same,
      # in which case the domain_publisher and domain_player fields will be used
      # to distinguish the intended connection type.
      app_publisher stream;

      # The second component of the stream id, identifying a stream consumer.
      # Note that the values for app_publisher and app_player can be the same,
      # in which case the domain_publisher and domain_player fields will be used
      # to distinguish the intended connection type.
      app_player stream;

      # If enabled, the captured stream data will be recorded on disk as short
      # .ts video segments for use with HTTP Live Streaming (HLS) protocol.
      record_hls off; # on, off

      # The duration of each .ts video segment if HLS is enabled.
      # record_hls_segment_duration 10; # unit s
    }
  }
}
